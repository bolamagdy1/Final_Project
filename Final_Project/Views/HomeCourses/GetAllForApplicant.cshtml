@model IEnumerable<Final_Project.Models.Course>

@{
    ViewData["Title"] = "Get All For Applicant";
}

<style>
    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-left: 20px;
        margin-top: 20px;
        margin-bottom:20px;
    }

    .card {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: 350px;
    }

    .card-logo img {
        max-width: 100%;
        height: 100%;
        margin-bottom: 15px;
    }

    .card-logo  {
        max-width: 100%;
        height: 100%;
        margin-bottom: 15px;
    }

    .card-details h3 {
        margin-top: 5px;
    }

    .card-details {
        width: 100%;
        height: 100%
    }
    .card-actions a {
        margin-right: 10px;
    }
</style>

<div class="card-container">
    @foreach (var item in Model)
    {
        <div class="card  bg-light">
            <div class="card-logo">
                <img src="@Url.Content("~/Server/Course_Images/"+item.Image)" alt="Logo">
            </div>
            <div class="card-details">
                <h3>Course Name:  @item.CourseName</h3>
                <h4>Description:  @item.CourseDescription</h4>
                <p><h3>Course Content: </h3>  @item.Content</p>
            </div>
            <div class="card-actions">
                <a asp-action="adding" asp-route-id="@item.CourseId" class="btn btn-success">Apply</a>
                <span style="float:right;font-size:larger"><b>Price: @item.Price $ </b></span>
            </div>
        </div>
    }
</div>
<div class="text-center" style="padding-left:450px">
    <div id="paypal-button-container"></div>
</div>

@section Scripts {
    @*Use ViewBag.ClientId to load Paypal Javascript SDK*@
    <script src="https://www.paypal.com/sdk/js?client-id=AciJN35r05hG5oaPQI19GqPlh4fHd3OX3LPbLjvu8J1n87KDMf21_wp-V_okmA_jSNOJql91U_H06wxD"></script>

    <script>
        paypal.Buttons({
            style: {
                layout: 'vertical',
                color: 'silver',
                tagline: 'false'
            },
            createOrder: (data, actions) => {
                return fetch("@Url.Action("Order")", {
                    method: "post",
                }).then((response) => {
                    if (!response.ok) {
                        return response.json().then(error => { throw error; });
                    }

                    return response.json();
                }).then((order) => order.id)
                    .catch(error => alert(error.message));
            },
            onApprove: (data, actions) => {
                return fetch(`@Url.Action("Capture")?orderId=${data.orderID}`, {
                    method: "post",
                }).then((response) => {
                    if (!response.ok) {
                        return response.json().then(error => { throw error; });
                    }

                    window.location.href = "@Url.Action("Success")";
                }).catch(error => alert(error.message));
            }
        }).render('#paypal-button-container');
    </script>
}
